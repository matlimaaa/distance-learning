name: Laravel CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  laravel-tests:
    name: CI
    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.1'
    - uses: actions/checkout@v3
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
    - name: Execute all tests via PHPUnit
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: vendor/bin/phpunit
  
  laravel-deploy:
    name: CD
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_USERNAME: ${{ secrets.SSH_USER }}
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
    run: |
      mkdir -p ~/my-app
      rsync -az --delete --exclude='.git/' ./ $SSH_USERNAME@$SSH_HOST:~/my-app/

  # laravel-deploy:
  #   name: CD
  #   needs: laravel-tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         ref: main

  #     - name: Deploy to server
  #       uses: easingthemes/ssh-deploy@v4.1.8
  #       env:
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         ARGS: "-rlgoDzvc -i --exclude .git exclude .docker exclude .github"
  #         REMOTE_HOST: ${{ secrets.SSH_HOST }}
  #         REMOTE_USER: ${{ secrets.SSH_USER }}
  #         TARGET: /home/${{ secrets.SSH_USER }}/ci-cd

  #     - name: Execute commands SSH
  #       uses: appleboy/ssh-action@master
  #       env:
  #         USER_PASS: "${{ secrets.USER_PASSWORD }}"
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USER }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         envs: USER_PASS
  #         script: |
  #           ls -la
  #           echo $USER_PASS | sudo -S docker ps
      

